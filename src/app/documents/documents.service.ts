import {Injectable} from '@angular/core';
import {Observable, of, throwError} from 'rxjs';
import {DocumentModel} from './_models/document-model';
import {AcceptRequest} from './_models/accept-request';

@Injectable({
  providedIn: 'root'
})
export class DocumentsService {

  private _mockDocuments = [
    {
      id: 1, title: 'Раскрытие информации', text: 'Лицензии Банка России\n' +
        '№ 045-13567-001000 на осуществление деятельности по управлению ценными бумагами от 19 мая 2011 г. (без ограничения срока действия);\n' +
        '№ 045-13561-100000 на осуществление брокерской деятельности от 19 мая 2011 г. (без ограничения срока действия);\n' +
        '№ 045-13564-010000 на осуществление дилерской деятельности от 19 мая 2011 г. (без ограничения срока действия);\n' +
        '№ 045-13570-000100 на осуществление депозитарной деятельности от 19 мая 2011 г. (без ограничения срока действия).\n' +
        'Орган, выдавший лицензии: ФСФР России.\n' +
        'Орган, осуществляющий лицензирование в настоящее время: Банк России, адрес: ул. Неглинная, 12, Москва, 107016, Телефоны: 8 800 300-30-00 (для бесплатных звонков из регионов России), +7 499 300-30-00 (круглосуточно), факс: +7 495 621-64-65.\n' +
        'ООО ИК «Фридом Финанс» совмещает несколько видов профессиональной деятельности на рынке ценных бумаг: брокерскую деятельность, депозитарную деятельность, дилерскую деятельность, деятельность по доверительному управлению ценными бумагами, деятельность по инвестиционному консультированию, осуществляемых в соответствии с требованиями действующего законодательства Российской Федерации.\n' +
        'Информация об ООО ИК «Фридом Финанс» на сайте Банка России\n' +
        '\n' +
        'Дата раскрытия информации: 31 мая 2019 года\n' +
        'Период актуальности: информация актуальна с даты раскрытия по настоящее время.\n' +
        '\n' +
        'ООО ИК «Фридом Финанс» совмещает несколько видов профессиональной деятельности на рынке ценных бумаг: брокерскую деятельность, депозитарную деятельность, дилерскую деятельность, деятельность по доверительному управлению ценными бумагами, осуществляемых в соответствии с требованиями действующего законодательства Российской Федерации.\n' +
        'Информация об ООО ИК «Фридом Финанс» на сайте Банка России\n' +
        '\n' +
        'Дата раскрытия информации: 20 мая 2016 года\n' +
        'Период актуальности: информация актуальна с даты раскрытия по 30.05.2019\n' +
        '\n' +
        '\n' +
        '\n' +
        'Источник: https://ffin.ru/about/company/requisites.php#ixzz6HrjRzb3V'
    },
    {
      id: 2,
      title: 'Членство в CPO',
      text: 'Общество с ограниченной ответственностью Инвестиционная компания «Фридом Финанс» является членом Национальной ассоциации участников фондового рынка (НАУФОР).\n' +
        '\n' +
        'Информация о стандартах СРО, которыми руководствуется компания при осуществлении своей деятельности: НАУФОР.\n' +
        '\n' +
        'Адрес сайта саморегулируемой организации: https://www.naufor.ru/\n' +
        '\n' +
        'Дата раскрытия информации: 20 мая 2016 года\n' +
        'Период актуальности: информация актуальна с даты раскрытия по настоящее время\n' +
        'Базовый стандарт совершения брокером операций на финансовом рынке\n' +
        '\n' +
        'Дата раскрытия информации: 01 декабря 2019 года\n' +
        'Период актуальности: информация актуальна с даты раскрытия по настоящее время\n' +
        '\n' +
        'Базовый стандарт защиты прав и интересов физических и юридических лиц – получателей финансовых услуг, оказываемых членами саморегулируемых организаций в сфере финансового рынка, объединяющих брокеров\n' +
        '\n' +
        '\n' +
        '\n' +
        'Источник: https://ffin.ru/about/company/requisites.php#ixzz6HrjbzTHX'
    }
  ] as DocumentModel[];

  constructor() {
  }

  accept(documentId: number, request?: AcceptRequest): Observable<DocumentModel> {
    const document = this._mockDocuments.find(i => i.id === documentId);
    if (!document) {
      return throwError(new Error('Документ не найден'));
    }

    return of(document);
  }

  decline(documentId: number, request?: AcceptRequest): Observable<DocumentModel> {
    const document = this._mockDocuments.find(i => i.id === documentId);
    if (!document) {
      return throwError(new Error('Документ не найден'));
    }

    return of(document);
  }

  getById(documentId: number): Observable<DocumentModel> {
    const document = this._mockDocuments.find(i => i.id === documentId);
    if (!document) {
      return throwError(new Error('Документ не найден'));
    }

    return of(document);
  }
}
